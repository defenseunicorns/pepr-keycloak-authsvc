kind: ZarfPackageConfig
metadata:
  name: pepr-keycloak-demo
  yolo: true

components:
  # XXX: BDW: at this point, I need to know the domain, and have the certs for istio. since this will setup the gateway
  - name: istio
    required: true
    charts:
      - name: base
        releaseName: istio
        url: https://istio-release.storage.googleapis.com/charts
        version: 1.17.2
        namespace: istio-system
      - name: istiod
        releaseName: istiod
        url: https://istio-release.storage.googleapis.com/charts
        version: 1.17.2
        namespace: istio-system
      - name: gateway
        releaseName: istio-gateway
        url: https://istio-release.storage.googleapis.com/charts
        version: 1.17.2
        namespace: istio-system
        files:
          - source: istio-tls.crt
            target: istio-tls.crt
          - source: istio-tls.key
            target: istio-tls.key
    actions:
      onDeploy:
        defaults:
          mute: true
        onSuccess:
          - cmd: |
              echo "creating tls cert/key"
              kubectl create -n istio-system secret tls creds \
                  --key=istio-tls.key --cert=istio-tls.crt
            mute: false

    # XXX: BDW: should be plain, only the bits, not configured yet.
  - name: authservice
    required: true
    charts:
      - name: authservice
        gitPath: chart
        url: https://repo1.dso.mil/big-bang/product/packages/authservice.git
        version: 0.5.3-bb.7
        namespace: authservice
        valuesFiles:
          - "authservice-values.yaml"

    # XXX: BDW: keycloak should basically not be configured at this time.
    # XXX: BDW: todo find minimal config for it.
  - name: keycloak
    required: true
    charts:
      - name: keycloak
        url: https://charts.bitnami.com/bitnami
        version: 14.4.0
        namespace: keycloak
        valuesFiles:
          - "keycloak-values.yaml"
    actions:
      onDeploy:
        defaults:
          mute: true
        onSuccess:
          - cmd: |
              echo "Keycloak admin password:"
              kubectl get secret -n keycloak keycloak -o yaml | awk -F ': ' '/admin-password/ {print $2}' | base64 -d
              echo ""
              echo "Run 'kubectl port-forward svc/keycloak -n keycloak 9999:80' and then navigate to http://localhost:9999/"
            mute: false

    # podinfo should have zero config.
  - name: podinfo
    required: true
    charts:
      - name: podinfo
        gitPath: chart
        url: oci://ghcr.io/stefanprodan/charts/podinfo
        version: 6.3.5
        namespace: podinfo

    # pepr should be able to:
    # 1. configure the istio mesh
    # 2. setup istio VS/gateway for keycloak
    # 3. instructions on how to setup an app for keycloak.
    # 4. create the user for keycloak (example)
    # 5. update authservice to own auth for this app
    # 6. configure the istio objects for auth for the app.
# XXX: BDW AFTER!!!
# not needed
# istioctl install --set profile=default

# creation of these should be done differently, would like ingress objects to be rewritten as these.
# kubectl apply -f future.yaml
# kubectl label ns podinfo istio-injection=enabled
# kubectl label ns keycloak istio-injection=enabled
# kubectl label ns authservice istio-injection=enabled
# TODO: restart keycloak
# kubectl rollout restart -n podinfo deployment podinfo

# pepr stuff
# kubectl create secret generic config -n podinfo --from-literal=realmName=bigbang --from-literal=clientId=bigbangid --from-literal=clientName=bigbang
# kubectl label secret config -n podinfo config create=clientidsecret

